========================================================================================
	Создание таблицы, как в примере ТЗ
========================================================================================

CREATE TABLE task_2(
  id int,
  step int,
  terminal bit)
  
INSERT task_2 VALUES(1,7,0)
INSERT task_2 VALUES(2,1,1)
INSERT task_2 VALUES(3,2,0)
INSERT task_2 VALUES(4,3,0)
INSERT task_2 VALUES(5,-3,0)
INSERT task_2 VALUES(6,0,1)
INSERT task_2 VALUES(7,-3,0)
INSERT task_2 VALUES(8,-4,1)
  

========================================================================================
	Создание функции, которая получает идентификатор узла, пересекает график
	и возвращает идентификатор первого встреченного терминального узла
========================================================================================

CREATE FUNCTION getID(@id int)
	RETURNS int
    BEGIN
      DECLARE @flag bit = 0
        WHILE @flag < 1
            BEGIN
                if (SELECT task_2.terminal FROM task_2 WHERE task_2.id = @id) = 0
					SET @id = (SELECT task_2.id FROM task_2 WHERE task_2.id = @id) + (SELECT task_2.step FROM task_2 WHERE task_2.id = @id) 
            	ELSE
                	SET @flag = 1
            END
    RETURN @id
    END
    
========================================================================================
	Запуск функции
	args:
		id (int) - идентификатор точки входа, т.е. идентификатор той строчки
		откуда начинается поиск
	return: 
		id (int) - возвращает искомый идентификатор терминального узла
========================================================================================

SELECT dbo.getID(5)
    